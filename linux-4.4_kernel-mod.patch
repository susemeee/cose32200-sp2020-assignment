diff --git a/block/Makefile b/block/Makefile
index 00ecc97..96c346f 100644
--- a/block/Makefile
+++ b/block/Makefile
@@ -10,6 +10,8 @@ obj-$(CONFIG_BLOCK) := bio.o elevator.o blk-core.o blk-tag.o blk-sysfs.o \
 			genhd.o scsi_ioctl.o partition-generic.o ioprio.o \
 			partitions/
 
+obj-$(CONFIG_BLOCK) += circular_queue.o
+
 obj-$(CONFIG_BOUNCE)	+= bounce.o
 obj-$(CONFIG_BLK_DEV_BSG)	+= bsg.o
 obj-$(CONFIG_BLK_DEV_BSGLIB)	+= bsg-lib.o
diff --git a/block/blk-core.c b/block/blk-core.c
index 33e2f62..68fc1a4 100644
--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -48,6 +48,19 @@ EXPORT_TRACEPOINT_SYMBOL_GPL(block_unplug);
 
 DEFINE_IDA(blk_queue_ida);
 
+// 필요한 헤더 include
+#include <linux/time.h>
+#include "circular_queue.h"
+
+circular_queue blk_inspection_queue = {
+	.front = -1,
+	.rear = -1,
+};
+
+// blk_inspection_queue를 lkm에서 쓸 수 있도록 symbol export
+EXPORT_SYMBOL(blk_inspection_queue);
+EXPORT_SYMBOL(dequeue);
+
 /*
  * For the allocated request tables
  */
@@ -2108,7 +2121,26 @@ blk_qc_t submit_bio(int rw, struct bio *bio)
 			count = bio_sectors(bio);
 
 		if (rw & WRITE) {
+			sector_info info;
+			// 현재 시각 정보를 초 단위로 반환 (tv_sec에 저장)
+			ktime_t ktime = ktime_get();
+			// write가 이루어진 device의 file system 이름을 가져오기 위해, bio device의 superblock을 참조
+			struct super_block* superblock = bio->bi_bdev->bd_super;
+
 			count_vm_events(PGPGOUT, count);
+
+			info.is_valid = 1;
+			info.number = (unsigned long long)bio->bi_iter.bi_sector;
+			info.pid = task_pid_nr(current);
+			info.at = ktime_to_ns(ktime);
+			// bd_super가 없는 경우 (null pointer) 에 대한 예외처리
+			if (superblock != NULL) {
+				info.fsname = superblock->s_type->name;
+			} else {
+				info.fsname = "???";
+			}
+			enqueue(&blk_inspection_queue, info);
+
 		} else {
 			task_io_account_read(bio->bi_iter.bi_size);
 			count_vm_events(PGPGIN, count);
